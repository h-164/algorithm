function solution(maps) {
    const dx = [-1, 1, 0, 0];
    const dy = [0, 0, -1, 1];

    const queue = [];
    queue.push({ x: 0, y: 0, count: 1 });

    while (queue.length > 0) {
        const current = queue.shift();

        for (let i = 0; i < 4; i++) {
            const nx = current.x + dx[i];
            const ny = current.y + dy[i];

            if (nx >= 0 && nx < maps.length && ny >= 0 && ny < maps[0].length && maps[nx][ny] === 1) {
                if (nx === maps.length - 1 && ny === maps[0].length - 1) {
                    return current.count + 1;
                }

                maps[nx][ny] = 0;
                queue.push({ x: nx, y: ny, count: current.count + 1 });
            }
        }
    }

    return -1;
}

